<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheBox xar_version="3">
    <Box name="root" id="1" localization="8" tooltip="Updates the database to flag that the message has been heard." x="396" y="195">
        <bitmap>media/images/box/interaction/rec_sound.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[# IN:  NONE
# OUT: location object list

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.employee_name = ''
        self.file_path = ''
        self.gotName = False
        self.gotFilePath = False

    def onLoad(self):
        #put initialization code here
        import os
        import sys
        behaviorPath = self.session().service("ALFrameManager").getBehaviorPath(self.behaviorId)
        self.path = os.path.join(behaviorPath, '../lib')
        if self.path not in sys.path:
            sys.path.insert(0, self.path)

    def onUnload(self):
        #put clean-up code here
        if self.path in sys.path:
            sys.path.remove(self.path)

    def onInput_message_file_path(self, message_file_path):
        self.file_path = message_file_path
        self.gotFilePath = True
        self.save()

    def onInput_employee_name(self, employee_name):
        self.employee_name = employee_name
        self.gotName = True
        self.save()

    def save(self):
        from tinydb import TinyDB, Query
        import json
        db = TinyDB(self.getParameter('Database Path'))
        employees = db.table('employees')
        Employee = Query()
        if self.gotFilePath and self.gotName:
            employee_data = employees.get(Employee.name == self.employee_name)
            if employee_data:
                messages = employee_data['messages']
                i = next((i for (i, d) in enumerate(messages) if d['file_path'] == self.file_path), None)
                messages[i]['listened'] = True
                self.logger.info(employee_data)
                employees.update(employee_data, Employee.name == self.employee_name)
                self.gotFilePath = False
                self.gotName = False
                self.OK()
            else:
                self.onError('Employee with name %s was not found' % self.employee_name)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="message_file_path" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" />
        <Input name="employee_name" type="3" type_size="1" nature="1" inner="0" tooltip="" id="3" />
        <Output name="OK" type="1" type_size="1" nature="2" inner="0" tooltip="The data has been saved." id="4" />
        <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
        <Parameter name="Database Path" inherits_from_parent="0" content_type="3" value="/home/nao/airport/db/database.json" default_value="/home/nao/airport/db/database.json" custom_choice="0" tooltip="" id="6" />
    </Box>
</ChoregrapheBox>
